{"version":3,"file":"index.esm.js","sources":["../src/components/chart/utils.js","../src/components/chart/formatter.js","../src/components/chart/lib/bar.js","../src/components/chart/index.js"],"sourcesContent":["import { setFontSize as fs } from './utils.js'\n/**\n * 优先级 extra内容优先级高于自定义配置\n * 默认值\n * 该函数没有兼容数组检测\n */\nexport function merge(def, target) {\n\tconst opt = def\n\tconst targetAttrs = Object.keys(target)\n\ttargetAttrs.forEach((item) => {\n\t\tconst tarType = getType(target[item])\n\t\tconst defType = getType(opt[item])\n\t\tif (tarType === '[object Object]' && defType === '[object Object]') {\n\t\t\topt[item] = merge(opt[item], target[item])\n\t\t} else {\n\t\t\topt[item] = target[item]\n\t\t}\n\t})\n\treturn opt\n}\nexport function getType(target) {\n\treturn Object.prototype.toString.call(target)\n}\n/**\n * 深拷贝函数\n * @param {} obj\n */\nexport function deepClone(obj) {\n\t//可传入对象 或 数组\n\t//  判断是否为 null 或 undefined 直接返回该值即可,\n\tif (obj === null || !obj) return obj\n\t// 判断 是要深拷贝 对象 还是 数组\n\tif (Object.prototype.toString.call(obj) === '[object Object]') {\n\t\t//对象字符串化的值会为 \"[object Object]\"\n\t\tlet target = {} //生成新的一个对象\n\t\tconst keys = Object.keys(obj) //取出对象所有的key属性 返回数组 keys = [ ]\n\t\t//遍历复制值, 可用 for 循环代替性能较好\n\t\tkeys.forEach((key) => {\n\t\t\tif (obj[key] && typeof obj[key] === 'object')\n\t\t\t\t//如果遇到的值又是 引用类型的 [ ] {} ,得继续深拷贝\n\t\t\t\ttarget[key] = deepClone(obj[key])\n\t\t\t//递归\n\t\t\telse target[key] = obj[key]\n\t\t})\n\t\treturn target //返回新的对象\n\t} else if (Array.isArray(obj)) {\n\t\t// 数组同理\n\t\tlet arr = []\n\t\tobj.forEach((item, index) => {\n\t\t\tif (item && typeof item === 'object') arr[index] = deepClone(item)\n\t\t\telse arr[index] = item\n\t\t})\n\t\treturn arr\n\t}\n}\n\n/**\n * grid基础函数\n * @param {*} param0\n * @returns\n */\nexport const getGrid = (config = {}) => {\n\tconst { containLabel = true, top = 30, right = 10, bottom = 40, left = 10, ...extra } = config\n\treturn {\n\t\tcontainLabel: containLabel, // 是否把坐标轴计算在内\n\t\ttop: fs(top),\n\t\tright: fs(right),\n\t\tbottom: fs(bottom),\n\t\tleft: fs(left),\n\t\t...extra,\n\t}\n}\n\nexport const getTooltip = (config = {}) => {\n\tconst { trigger = 'axis', ...extra } = config\n\treturn {\n\t\tshow: true,\n\t\ttrigger,\n\t\tconfine: true,\n\t\taxisPointer: {\n\t\t\ttype: 'shadow',\n\t\t},\n\t\ttextStyle: {\n\t\t\tfontSize: fs(14), // 字体大小\n\t\t},\n\t\t...extra,\n\t}\n}\n\nexport const getAxis = ({\n\tname = '',\n\tshow = true,\n\ttype = 'category',\n\tscale = false,\n\ttick = true,\n\ttickInterval = 'auto',\n\tlabel = true,\n\tlabelInterval = 'auto',\n\tlabelMargin = 5,\n\tsplitLine = false,\n\taxis = true,\n\taxisLabelFormatter,\n\taxisLabelFontSize = 16,\n\trotate = 0,\n\taxisCustom = {},\n\tcolor = '#666',\n\textra,\n}) => {\n\treturn {\n\t\tname,\n\t\t...axisCustom,\n\t\tshow,\n\t\ttype,\n\t\tscale,\n\t\taxisLine: {\n\t\t\tshow: axis,\n\t\t},\n\t\taxisTick: {\n\t\t\tshow: tick,\n\t\t\tinterval: tickInterval,\n\t\t},\n\t\taxisLabel: {\n\t\t\tshow: label,\n\t\t\tinterval: labelInterval,\n\t\t\tmargin: labelMargin,\n\t\t\tcolor: color,\n\t\t\tfontSize: fs(axisLabelFontSize),\n\t\t\trotate: rotate,\n\t\t\tformatter: axisLabelFormatter || '{value}',\n\t\t},\n\t\tsplitLine: {\n\t\t\tshow: splitLine,\n\t\t\tlineStyle: {\n\t\t\t\ttype: 'dashed',\n\t\t\t},\n\t\t},\n\t\taxisPointer: {\n\t\t\ttype: 'shadow', // 选中柱状图加阴影\n\t\t\tlabel: {\n\t\t\t\tshow: label,\n\t\t\t\tmargin: labelMargin - 5,\n\t\t\t\tfontSize: 12,\n\t\t\t\tformatter: '{value}',\n\t\t\t},\n\t\t},\n\t\t...extra,\n\t}\n}\n// type 第一个字段为水平轴方向，第二个为垂直方向\nexport const getLegendPosition = (type) => {\n\tconst _opt = {\n\t\ttop: 'auto',\n\t\tbottom: 'auto',\n\t\tleft: 'auto',\n\t\tright: 'auto',\n\t}\n\tif (type == 'cc') {\n\t\t_opt.left = 'center'\n\t\t_opt.top = 'middle'\n\t} else if (type == 'ct') {\n\t\t_opt.left = 'center'\n\t\t// _opt.top = \"top\"\n\t\t_opt.top = '2%'\n\t} else if (type == 'cb') {\n\t\t_opt.left = 'center'\n\t\t_opt.bottom = fs(2)\n\t} else if (type == 'lt') {\n\t\t_opt.left = 'left'\n\t\t_opt.top = 'top'\n\t} else if (type === 'lc') {\n\t\t_opt.left = 'left'\n\t\t_opt.top = 'middle'\n\t} else if (type == 'lb') {\n\t\t_opt.left = 'left'\n\t\t_opt.top = 'bottom'\n\t} else if (type == 'rt') {\n\t\t_opt.right = 'right'\n\t\t_opt.top = 'top'\n\t} else if (type == 'rc') {\n\t\t_opt.right = 'right'\n\t\t_opt.top = 'middle'\n\t} else if (type === 'rb') {\n\t\t_opt.right = 'right'\n\t\t_opt.top = 'bottom'\n\t} else {\n\t\t_opt.left = 'center'\n\t\t_opt.top = 'bottom'\n\t}\n\treturn _opt\n}\n\nexport const getLegend = (config = {}) => {\n\tconst { type = 'plain', position = 'cb', show = true, formatter, color = '#666', ...extra } = config\n\tconst hori = ['cb', 'ct']\n\treturn {\n\t\tshow,\n\t\ttype: type || 'plain',\n\t\torient: hori.includes(position) ? 'horizontal' : 'vertical',\n\t\t...getLegendPosition(position), // 默认下面\n\t\tpadding: fs(5), // 图例内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。\n\t\titemGap: fs(10), // 图例每项之间的间隔。横向布局时为水平间隔，纵向布局时为纵向间隔。\n\t\t// icon: \"roundRect\", // 图例项的 icon。'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow', 'none'\n\t\tborderRadius: 0,\n\t\tborderWidth: 0,\n\t\titemWidth: fs(20),\n\t\titemHeight: fs(15),\n\t\tformatter,\n\t\ttextStyle: {\n\t\t\tfontSize: fs(16),\n\t\t\tcolor: color,\n\t\t},\n\t\t...extra,\n\t}\n}\n\nexport const getRdiusAxis = (config = {}) => {\n\tconst { fontSize = 12, labelShow = true, ...extra } = config\n\treturn {\n\t\taxisLabel: {\n\t\t\tfontSize,\n\t\t\tshow: labelShow,\n\t\t\tshowMinLabel: true,\n\t\t\tshowMaxLabel: true,\n\t\t\thideOverlap: true,\n\t\t},\n\t\t...extra,\n\t}\n}\n\nexport const getAngleAxis = (config = {}) => {\n\tconst { fontSize = 12, ...extra } = config\n\treturn {\n\t\t// type: \"category\",\n\t\taxisLabel: {\n\t\t\tfontSize,\n\t\t},\n\t\t...extra,\n\t}\n}\n\nexport const consoleJSON = (res, ...extra) => console.log(JSON.parse(JSON.stringify(res)), ...extra)\n//数字增加千分符\nexport const milliFormat = (num) => {\n\tif (num) {\n\t\tconst reg = /(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g\n\t\treturn num.toString().replace(reg, '$1,')\n\t}\n\treturn num\n}\n\n/**\n * 响应式 echarts重新计算个单元字号\n * @param {*} size\n * @param {*} refrence 可选参数\n * @returns number\n */\nexport const setFontSize = (size, refrence) => {\n\tif (isNaN(Number(size))) return 0\n\n\tconst clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n\tif (!clientWidth) {\n\t\treturn size\n\t}\n\tconst standard = refrence || 1920\n\t// 此处的3840 为设计稿的宽度，记得修改！\n\tconst fontSize = clientWidth / standard\n\treturn size * fontSize\n}\n\n// 判断数组里值是否都相等\nexport const isArrayAllEqual = (array) => {\n\tif (array.length) {\n\t\tconst setArr = new Set(array)\n\t\treturn setArr.size == 1\n\t}\n\treturn false\n}\nexport default {\n\tisArrayAllEqual,\n\tsetFontSize,\n}\n","export const formatterItem = {\n\ttype: 'auto', // auto,value,percent\n\tunit: 1, // 换算单位\n\tsuffix: '', // 单位后缀\n\tdecimalCount: 2, // 小数位数\n\tthousandSeparator: true, // 千分符\n}\n\n// 单位list\nexport const unitList = [\n\t{ name: 'unit_none', value: 1 },\n\t{ name: 'unit_thousand', value: 1000 },\n\t{ name: 'unit_ten_thousand', value: 10000 },\n\t{ name: 'unit_million', value: 1000000 },\n\t{ name: 'unit_hundred_million', value: 100000000 },\n]\n\n/**\n *\n * @param {*} value\n * @param {*} formatter = {\n * type: \"auto\" | \"value\" | \"percent\"\n *  decimalCount: 2,\n *  unit: 1000,\n *  thousandSeparator: true, // 千分符\n *  suffix: '',\n *  isNaN: '-'，\n *  ignoreUnit: false, // 后缀是否补齐单位\n * }\n */\n\nexport function valueFormatter(value, formatter) {\n\tif (value === null || value === '' || value === undefined) {\n\t\treturn ''\n\t}\n\tif (Number(value).toString() == 'NaN') {\n\t\treturn formatter.isNaN || value\n\t}\n\n\t// 1.unit 2.decimal 3.thousand separator and suffix\n\tlet result\n\tif (formatter.type === 'auto') {\n\t\tresult = transSeparatorAndSuffix(transUnit(value, formatter), formatter)\n\t} else if (formatter.type === 'value') {\n\t\tresult = transSeparatorAndSuffix(transDecimal(transUnit(value, formatter), formatter), formatter)\n\t} else if (formatter.type === 'percent') {\n\t\tvalue = value * 100\n\t\tresult = transSeparatorAndSuffix(transDecimal(value, formatter), formatter)\n\t} else {\n\t\tresult = value\n\t}\n\treturn result\n}\n\nfunction transUnit(value, formatter) {\n\treturn value / formatter.unit\n}\n\nfunction transDecimal(value, formatter) {\n\treturn value.toFixed(formatter.decimalCount)\n}\n\nfunction transSeparatorAndSuffix(value, formatter) {\n\tlet str = value + ''\n\tif (formatter.thousandSeparator) {\n\t\tconst thousandsReg = /(\\d)(?=(\\d{3})+$)/g\n\t\tconst numArr = str.split('.')\n\t\tnumArr[0] = numArr[0].replace(thousandsReg, '$1,')\n\t\tstr = numArr.join('.')\n\t}\n\tif (!formatter.ignoreUnit) {\n\t\tif (formatter.type === 'percent') {\n\t\t\tstr += '%'\n\t\t} else {\n\t\t\tif (formatter.unit === 1000) {\n\t\t\t\tstr += '千'\n\t\t\t} else if (formatter.unit === 10000) {\n\t\t\t\tstr += '万'\n\t\t\t} else if (formatter.unit === 1000000) {\n\t\t\t\tstr += '百万'\n\t\t\t} else if (formatter.unit === 100000000) {\n\t\t\t\tstr += '亿'\n\t\t\t}\n\t\t}\n\t}\n\tconst _suffix = formatter?.suffix?.replace(/(^\\s*)|(\\s*$)/g, '')\n\tif (_suffix) {\n\t\tstr += _suffix\n\t}\n\treturn str\n}\n","import { merge, getGrid, getTooltip, getAxis, getLegend } from '../utils.js'\nimport { valueFormatter } from '../formatter.js'\nimport { setFontSize as fs, isArrayAllEqual as isAllEqual } from '../utils.js'\n\nconst base = (chartData = {}, option = {}) => {\n\t// eslint-disable-next-line no-unused-vars\n\tconst { data = [], axisData = [], ...extraData } = chartData\n\t// 自定义API\n\tconst {\n\t\tbarWidth = 16,\n\t\thideDataLabel = [], // 不显示label\n\t\tshowMarkLine = [], // 数据相同，展示为一条直的虚线\n\t\tdataLabelFormatter, // 柱子上的label\n\t\txAxisLabelFormatter = '{value}', // x轴的label\n\t\tyAxisLabelFormatter = '{value}', // y轴的label\n\t\ttooltipFormatter, // tooltip的label\n\t\ttooltipValueFormatter,\n\t\tdataLabelPosition = 'outside',\n\t\tdataLabelShow = true,\n\t\tdataLabelOpt = {}, // 数据 label 自定义样式\n\t\tcolor = [],\n\t\tlabelColor = [],\n\t\tlabelFontSize = 14,\n\t\ttooltipTrigger,\n\t\tbarBackgroundColor = '',\n\t\tbarBorderRadius = [],\n\t\tyAxisShow = true,\n\t\tlegendShow = true,\n\t\tlegendType = 'plain',\n\t\tlegendColor = '#000',\n\t\txAxisLabelRotate = 0,\n\t\tyAxisLabelRotate = 0,\n\t\txAxisLabelFontSize = 16,\n\t\tyAxisLabelFontSize = 16,\n\t\txAxisName = '',\n\t\tyAxisName = '',\n\t\txAxisCustom = {},\n\t\tyAxisCustom = {},\n\t\tlabelInterval = 0,\n\t\tlegendPosition = 'cb',\n\t\tyAxisSplitLine = true,\n\t\ttitleCustom = {},\n\t\taxisType = 'value',\n\t\tgrid = {},\n\t\txAxisColor = '#666',\n\t\tyAxisColor = '#666',\n\t\tdataZoomShow = false,\n\t\tdataZoomType = 'slider',\n\t\tdataZoomBottom = 20,\n\t\t...eOption // 这个应该升级为custom对象\n\t} = option\n\t// 图表配置项\n\tlet _opt = {\n\t\ttitle: titleCustom,\n\t\tgrid: getGrid(grid),\n\t\tlegend: getLegend({ show: legendShow, type: legendType, position: legendPosition, color: legendColor }),\n\t\ttooltip: getTooltip({ trigger: 'axis' }),\n\t\txAxis: getAxis({\n\t\t\tname: xAxisName,\n\t\t\ttick: false,\n\t\t\tlabelInterval: labelInterval,\n\t\t\tlabelMargin: 8,\n\t\t\taxisLabelFormatter: xAxisLabelFormatter,\n\t\t\trotate: xAxisLabelRotate,\n\t\t\taxisLabelFontSize: xAxisLabelFontSize,\n\t\t\taxisCustom: xAxisCustom,\n\t\t\tcolor: xAxisColor,\n\t\t}),\n\t\tyAxis: getAxis({\n\t\t\tname: yAxisName,\n\t\t\tshow: yAxisShow,\n\t\t\ttype: axisType,\n\t\t\tscale: false,\n\t\t\tsplitLine: yAxisSplitLine,\n\t\t\ttick: false,\n\t\t\taxis: false,\n\t\t\taxisLabelFormatter: yAxisLabelFormatter,\n\t\t\trotate: yAxisLabelRotate,\n\t\t\taxisLabelFontSize: yAxisLabelFontSize,\n\t\t\taxisCustom: yAxisCustom,\n\t\t\tcolor: yAxisColor,\n\t\t}),\n\t\tcolor,\n\t\tdataZoom: {\n\t\t\tshow: dataZoomShow,\n\t\t\ttype: dataZoomType,\n\t\t\trealtime: true,\n\t\t\tstart: 0,\n\t\t\tend: 100,\n\t\t\theight: 12,\n\t\t\tbottom: dataZoomBottom,\n\t\t\tborderColor: 'transparent',\n\t\t\tfilterMode: 'filter',\n\t\t\tbrushSelect: false,\n\t\t\thandleColor: '#aab6c6',\n\t\t\thandleSize: 20,\n\t\t\tshowDetail: false,\n\t\t},\n\t}\n\n\tif (tooltipTrigger) {\n\t\t_opt.tooltip.trigger = (params) => {\n\t\t\treturn tooltipTrigger(params, chartData)\n\t\t}\n\t}\n\n\tif (tooltipFormatter) {\n\t\t_opt.tooltip.formatter = (params) => {\n\t\t\treturn tooltipFormatter(params, chartData)\n\t\t}\n\t}\n\n\tif (tooltipValueFormatter) {\n\t\t_opt.tooltip.valueFormatter = (params) => {\n\t\t\treturn tooltipValueFormatter(params, chartData)\n\t\t}\n\t}\n\n\tlet labelFormatter = (params) => {\n\t\treturn valueFormatter(params.value, {\n\t\t\ttype: 'auto',\n\t\t\tunit: 1,\n\t\t\tthousandSeparator: true,\n\t\t\tsuffix: '',\n\t\t})\n\t}\n\n\tif (dataLabelFormatter) {\n\t\tlabelFormatter = dataLabelFormatter\n\t}\n\n\t// 载入数据\n\tif (axisData) {\n\t\t_opt.xAxis.data = axisData\n\t\t// _opt.legend.data = axisData.map(item => ({ name: item.name }))\n\t}\n\n\tif (data) {\n\t\t_opt.series = data.map((item, i) => {\n\t\t\tconst { type, ...others } = item\n\n\t\t\tconst seriesItem = {\n\t\t\t\ttype: type || 'bar',\n\t\t\t\tname: item.name,\n\t\t\t\tdata: item.data,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tshowBackground: !!barBackgroundColor,\n\t\t\t\tbackgroundStyle: {\n\t\t\t\t\tcolor: barBackgroundColor,\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tfontSize: fs(labelFontSize),\n\t\t\t\t\tshow: dataLabelShow && !hideDataLabel.includes(item.name),\n\t\t\t\t\tposition: dataLabelPosition,\n\t\t\t\t\tformatter: labelFormatter,\n\t\t\t\t\tcolor: labelColor[i] || color[i] || '#000',\n\t\t\t\t\t...dataLabelOpt,\n\t\t\t\t},\n\t\t\t\titemStyle: {\n\t\t\t\t\tborderRadius: barBorderRadius.length ? barBorderRadius : [0],\n\t\t\t\t},\n\t\t\t\t...others,\n\t\t\t}\n\t\t\tif (showMarkLine.includes(item.name)) {\n\t\t\t\tconst isEqual = isAllEqual(item.data)\n\t\t\t\tlet lastIndex\n\t\t\t\tif (isEqual) {\n\t\t\t\t\tseriesItem.data.filter((item, index) => {\n\t\t\t\t\t\tif (item) {\n\t\t\t\t\t\t\tlastIndex = index\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tseriesItem.label.show = false\n\t\t\t\t\tseriesItem.type = 'line'\n\t\t\t\t\tseriesItem.symbol = 'none'\n\t\t\t\t\tseriesItem.lineStyle = {\n\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t}\n\n\t\t\t\t\t// 重复数据 只有一个点显示，其余的点不显示\n\t\t\t\t\tseriesItem.data = seriesItem.data.map((itm, idx) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: itm,\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\tshow: idx === lastIndex,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsymbol: idx === lastIndex ? seriesItem.symbol : 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn seriesItem\n\t\t})\n\t}\n\n\treturn {\n\t\toption: _opt,\n\t\teOption,\n\t}\n}\n\nexport const barOption = (chartData = {}, option = {}) => {\n\tlet { option: _opt, eOption } = base(chartData, option)\n\n\t// 外部资源合并\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n\n// 堆积图\nexport const stackBarOption = (chartData = {}, option = {}) => {\n\tconst { stackValues = [], stackStrategy = 'samesign', ...baseOption } = option\n\tlet { option: _opt, eOption } = base(chartData, baseOption)\n\t_opt.series.forEach((item, index) => {\n\t\titem.stack = stackValues[index] || 'stack'\n\t\titem.stackStrategy = stackStrategy\n\t})\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n\nexport const heapStackBarOption = (chartData = {}, option = {}) => {\n\t// eslint-disable-next-line no-unused-vars\n\tconst { stackValues = [], stackStrategy = 'samesign', ...baseOption } = option\n\tlet { option: _opt, eOption } = base(chartData, baseOption)\n\tlet fd = chartData.data[0]?.commonData\n\tfor (let eve in fd) {\n\t\tchartData?.axisData.map((item, index) => {\n\t\t\tif (item == fd[eve]) {\n\t\t\t\tfd.stackIdent.map((i, ind) => {\n\t\t\t\t\tlet ad = []\n\t\t\t\t\tad.push(...new Array(fd.stackIdent.length).fill(0))\n\t\t\t\t\tad.splice(index, 1, fd.stackData[ind])\n\t\t\t\t\t_opt.series.push({\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tname: i,\n\t\t\t\t\t\tstack: 'total',\n\t\t\t\t\t\tdata: ad,\n\t\t\t\t\t\tbarWidth: option.barWidth,\n\t\t\t\t\t\tbarGap: '-100%',\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tfontSize: 10,\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\tposition: 'outside', //inside\n\t\t\t\t\t\t\tcolor: '#49a8fc',\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n\n// 瀑布图\nexport const stackTotalBarOption = (chartData = {}, option = {}) => {\n\tconst { order = 'ascending', stackStrategy = 'samesign', ...baseOption } = option\n\tlet { option: _opt, eOption } = base(chartData, baseOption)\n\n\t_opt.legend.show = false\n\t_opt.tooltip = {\n\t\ttrigger: 'axis',\n\t\taxisPointer: {\n\t\t\ttype: 'shadow',\n\t\t},\n\t\tformatter: function (params) {\n\t\t\tlet str = ''\n\t\t\tparams.map((item) => {\n\t\t\t\tif (item.value !== '-') {\n\t\t\t\t\tstr = item.name + '：' + item.value\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn str\n\t\t},\n\t}\n\tif (_opt.series && _opt.series.length > 0 && _opt.series[0].data && _opt.series[0].data.length > 0) {\n\t\tlet initOpt = _opt.series[0]\n\t\tlet dataValue = _opt.series[0].data\n\t\tlet lg = dataValue.length\n\t\tlet totalData = []\n\t\tlet sum = 0\n\t\tif (order == 'ascending') {\n\t\t\tdataValue.map((item, index) => {\n\t\t\t\tif (index == lg - 1) {\n\t\t\t\t\tsum = 0\n\t\t\t\t}\n\t\t\t\ttotalData[index] = sum\n\t\t\t\tsum = sum + parseFloat(item)\n\t\t\t})\n\t\t} else {\n\t\t\tdataValue.map((item, index) => {\n\t\t\t\tif (index >= 1) {\n\t\t\t\t\tsum = sum - parseFloat(item)\n\t\t\t\t\ttotalData[index] = sum\n\t\t\t\t} else {\n\t\t\t\t\ttotalData[index] = 0\n\t\t\t\t\tsum = item\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t_opt.series[0].data.map((item, index) => {\n\t\t\tlet arr = Array(lg).fill('-')\n\t\t\tarr[index] = item\n\t\t\t_opt.series[0] = {\n\t\t\t\t...initOpt,\n\t\t\t\tstack: 'stack',\n\t\t\t\tstackStrategy: stackStrategy,\n\t\t\t\tlabel: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t\tname: '',\n\t\t\t\tsilent: true,\n\t\t\t\titemStyle: {\n\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\tcolor: 'transparent',\n\t\t\t\t},\n\t\t\t\temphasis: {\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\t\tcolor: 'transparent',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdata: totalData,\n\t\t\t}\n\t\t\t_opt.series[index + 1] = {\n\t\t\t\t...initOpt,\n\t\t\t\tstack: 'stack',\n\t\t\t\tstackStrategy: stackStrategy,\n\t\t\t\tdata: arr,\n\t\t\t}\n\t\t})\n\t}\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n// 水平Bar\nexport const horizontalBarOption = (chartData = {}, option = {}) => {\n\tconst { dataLabelPosition = 'right', yInverse = false, ...baseOption } = option\n\tlet { option: _opt, eOption } = base(chartData, baseOption)\n\tconst { xAxis, yAxis } = _opt\n\t_opt.xAxis = yAxis\n\t_opt.yAxis = xAxis\n\t_opt.yAxis.inverse = yInverse\n\t_opt.series.forEach((item) => {\n\t\titem.label.position = dataLabelPosition\n\t})\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n\n// 水平堆积图\nexport const horizontalStackBarOption = (chartData = {}, option = {}) => {\n\tconst {\n\t\tdataLabelPosition = 'outside',\n\t\tstackStrategy = 'samesign',\n\t\tstackValues = [],\n\t\tyInverse = false,\n\t\t...baseOption\n\t} = option\n\tlet { option: _opt, eOption } = base(chartData, baseOption)\n\n\tconst { xAxis, yAxis } = _opt\n\t_opt.xAxis = yAxis\n\t_opt.yAxis = xAxis\n\t_opt.yAxis.inverse = yInverse\n\t_opt.series.forEach((item, index) => {\n\t\titem.stack = stackValues[index] || 'stack'\n\t\titem.stackStrategy = stackStrategy\n\t\titem.label.position = dataLabelPosition\n\t\t// item.label.show = false;\n\t\t// item.label.rotate = -90;\n\t\t// item.label.offset = [-10, 0];\n\t})\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n\n// 左右双向对比柱状图\nexport const pictorialBarOption = (chartData = {}, option = {}) => {\n\tconst { data = [], axisData = [] } = chartData\n\t// 自定义API\n\tconst {\n\t\tbarWidth = 10,\n\t\thideDataLabel = [], // 不显示label\n\t\t// showMarkLine = [], // 数据相同，展示为一条直的虚线\n\t\tdataLabelFormatter, // 柱子上的label\n\t\t// xAxisLabelFormatter = '{value}', // x轴的label\n\t\t// yAxisLabelFormatter = '{value}', // y轴的label\n\t\ttooltipFormatter, // tooltip的label\n\t\t// tooltipValueFormatter,\n\t\tdataLabelPosition = 'outside',\n\t\tdataLabelShow = true,\n\t\tdataLabelOpt = {}, // 数据 label 自定义样式\n\t\tcolor = [],\n\t\tlabelColor = [],\n\t\tlabelFontSize = 10,\n\t\ttooltipTrigger = 'axis',\n\t\tbarBackgroundColor = '',\n\t\tbarBorderRadius = [],\n\t\t// yAxisShow = true,\n\t\tlegendShow = true,\n\t\tlegendType = 'plain',\n\t\trightDataLabel = [],\n\t\tlineDataLabel = [],\n\t\t...eOption\n\t} = option\n\t// 图表配置项\n\tlet _opt = {\n\t\tgrid: [\n\t\t\t{\n\t\t\t\tleft: 15,\n\t\t\t\ttop: 20,\n\t\t\t\tbottom: 50,\n\t\t\t\twidth: '38%',\n\t\t\t},\n\t\t\t{\n\t\t\t\tright: 25,\n\t\t\t\ttop: 20,\n\t\t\t\tbottom: 50,\n\t\t\t\twidth: '38%',\n\t\t\t},\n\t\t],\n\t\tlegend: getLegend({ show: legendShow, type: legendType }),\n\t\ttooltip: getTooltip({ trigger: tooltipTrigger }),\n\t\tcolor,\n\t\txAxis: [\n\t\t\t{\n\t\t\t\ttype: 'value',\n\t\t\t\tinverse: true,\n\t\t\t\tsplitLine: { show: false },\n\t\t\t\taxisLabel: { show: false },\n\t\t\t\taxisLine: { show: false },\n\t\t\t\taxisTick: { show: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'value',\n\t\t\t\tinverse: false,\n\t\t\t\tgridIndex: 1,\n\t\t\t\tsplitLine: { show: false },\n\t\t\t\taxisLabel: { show: false },\n\t\t\t\taxisLine: { show: false },\n\t\t\t\taxisTick: { show: false },\n\t\t\t},\n\t\t],\n\t\tyAxis: [\n\t\t\t{\n\t\t\t\tposition: 'right',\n\t\t\t\tdata: axisData,\n\t\t\t\ttype: 'category',\n\t\t\t\taxisLabel: { show: true },\n\t\t\t\taxisLine: { show: false },\n\t\t\t\tsplitLine: { show: false },\n\t\t\t\taxisTick: { show: false },\n\t\t\t\tinverse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'category',\n\t\t\t\tdata: axisData,\n\t\t\t\taxisLabel: { color: 'transparent' },\n\t\t\t\taxisLine: { show: false },\n\t\t\t\tsplitLine: { show: false },\n\t\t\t\taxisTick: { show: false },\n\t\t\t\tinverse: true,\n\t\t\t\tgridIndex: 1,\n\t\t\t},\n\t\t],\n\t}\n\tlet labelFormatter = (params) => {\n\t\treturn valueFormatter(params.value, {\n\t\t\ttype: 'auto',\n\t\t\tunit: 1,\n\t\t\tthousandSeparator: true,\n\t\t\tsuffix: '',\n\t\t})\n\t}\n\tif (tooltipFormatter) {\n\t\t_opt.tooltip.formatter = (params) => {\n\t\t\treturn tooltipFormatter(params, chartData)\n\t\t}\n\t}\n\tif (dataLabelFormatter) {\n\t\tlabelFormatter = dataLabelFormatter\n\t}\n\tif (data) {\n\t\t_opt.series = data.map((item, i) => {\n\t\t\tconst { ...others } = item\n\t\t\tconst seriesItem = {\n\t\t\t\ttype: lineDataLabel.includes(item.name) ? 'line' : 'bar',\n\t\t\t\tname: item.name,\n\t\t\t\tdata: item.data,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tshowBackground: !!barBackgroundColor,\n\t\t\t\tbackgroundStyle: {\n\t\t\t\t\tcolor: barBackgroundColor,\n\t\t\t\t},\n\t\t\t\tsymbol: 'none',\n\t\t\t\t// symbolSize: 0,\n\t\t\t\tlabel: {\n\t\t\t\t\tfontSize: fs(labelFontSize),\n\t\t\t\t\tshow: dataLabelShow && !hideDataLabel.includes(item.name),\n\t\t\t\t\tposition: dataLabelPosition,\n\t\t\t\t\tformatter: labelFormatter,\n\t\t\t\t\tcolor: labelColor[i] || color[i] || '#000',\n\t\t\t\t\t...dataLabelOpt,\n\t\t\t\t},\n\t\t\t\titemStyle: {\n\t\t\t\t\tborderRadius: barBorderRadius.length ? barBorderRadius : [0],\n\t\t\t\t},\n\t\t\t\t...others,\n\t\t\t}\n\t\t\tif (rightDataLabel.length > 0) {\n\t\t\t\tif (rightDataLabel.includes(item.name)) {\n\t\t\t\t\tseriesItem.xAxisIndex = 1\n\t\t\t\t\tseriesItem.yAxisIndex = 1\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn seriesItem\n\t\t})\n\t}\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n// 重叠图（堆叠图 + 常规柱状图重叠）\nexport const doubleStackBar = (chartData = {}, option = {}) => {\n\tconst { dataLabelShow = false, ...baseOption } = option\n\tchartData.data = chartData.data.map((item, i) => {\n\t\tif (i < chartData.data.length - 1) {\n\t\t\titem.xAxisIndex = 0\n\t\t\titem.yAxisIndex = 0\n\t\t\titem.stack = 'Total'\n\t\t\titem.z = 2\n\t\t} else {\n\t\t\titem.xAxisIndex = 1\n\t\t\titem.yAxisIndex = 0\n\t\t\titem.z = 1\n\t\t\titem.barWidth = baseOption.barWidth + 5\n\t\t\titem.color = '#ccc'\n\t\t\titem.label = {\n\t\t\t\tshow: false,\n\t\t\t}\n\t\t}\n\t\treturn item\n\t})\n\tlet { option: _opt, eOption } = base(chartData, { dataLabelShow, ...baseOption })\n\tconst xAxis = _opt.xAxis\n\tconst yAxis = _opt.yAxis\n\t_opt.xAxis = [\n\t\txAxis,\n\t\t{\n\t\t\t...xAxis,\n\t\t\taxisLabel: { show: false },\n\t\t\taxisLine: { show: false },\n\t\t\taxisPointer: { label: { show: false } },\n\t\t},\n\t]\n\t_opt.yAxis = [yAxis, yAxis]\n\t_opt = merge(_opt, eOption)\n\treturn _opt\n}\n","import {\n\tbarOption,\n\tstackBarOption,\n\theapStackBarOption,\n\tstackTotalBarOption,\n\thorizontalBarOption,\n\thorizontalStackBarOption,\n\tpictorialBarOption,\n\tdoubleStackBar,\n} from './lib/bar.js'\n\nexport default {\n\tbarOption,\n\tstackBarOption,\n\theapStackBarOption,\n\tstackTotalBarOption,\n\thorizontalBarOption,\n\thorizontalStackBarOption,\n\tpictorialBarOption,\n\tdoubleStackBar,\n}\n"],"names":["merge","def","target","opt","Object","keys","forEach","item","tarType","getType","defType","prototype","toString","call","getGrid","config","arguments","length","undefined","_config$containLabel","containLabel","_config$top","top","_config$right","right","_config$bottom","bottom","_config$left","left","extra","_objectWithoutProperties","_excluded","_objectSpread","fs","getTooltip","_config$trigger","trigger","_excluded2","show","confine","axisPointer","type","textStyle","fontSize","getAxis","_ref","_ref$name","name","_ref$show","_ref$type","_ref$scale","scale","_ref$tick","tick","_ref$tickInterval","tickInterval","_ref$label","label","_ref$labelInterval","labelInterval","_ref$labelMargin","labelMargin","_ref$splitLine","splitLine","_ref$axis","axis","axisLabelFormatter","_ref$axisLabelFontSiz","axisLabelFontSize","_ref$rotate","rotate","_ref$axisCustom","axisCustom","_ref$color","color","axisLine","axisTick","interval","axisLabel","margin","formatter","lineStyle","getLegend","_config$type","_config$position","position","_config$show","_config$color","_excluded3","orient","includes","_opt","getLegendPosition","padding","itemGap","borderRadius","borderWidth","itemWidth","itemHeight","setFontSize","size","refrence","isNaN","Number","clientWidth","window","innerWidth","document","documentElement","body","valueFormatter","value","transSeparatorAndSuffix","transUnit","transDecimal","unit","toFixed","decimalCount","_formatter$suffix","str","thousandSeparator","numArr","split","replace","join","ignoreUnit","_suffix","suffix","base","chartData","option","_chartData$data","data","_chartData$axisData","axisData","_option$barWidth","barWidth","_option$hideDataLabel","hideDataLabel","_option$showMarkLine","showMarkLine","dataLabelFormatter","_option$xAxisLabelFor","xAxisLabelFormatter","_option$yAxisLabelFor","yAxisLabelFormatter","tooltipFormatter","tooltipValueFormatter","_option$dataLabelPosi","dataLabelPosition","_option$dataLabelShow","dataLabelShow","_option$dataLabelOpt","dataLabelOpt","_option$color","_option$labelColor","labelColor","_option$labelFontSize","labelFontSize","tooltipTrigger","_option$barBackground","barBackgroundColor","_option$barBorderRadi","barBorderRadius","_option$yAxisShow","yAxisShow","_option$legendShow","legendShow","_option$legendType","legendType","_option$legendColor","legendColor","_option$xAxisLabelRot","xAxisLabelRotate","_option$yAxisLabelRot","yAxisLabelRotate","_option$xAxisLabelFon","xAxisLabelFontSize","_option$yAxisLabelFon","yAxisLabelFontSize","_option$xAxisName","xAxisName","_option$yAxisName","yAxisName","_option$xAxisCustom","xAxisCustom","_option$yAxisCustom","yAxisCustom","_option$labelInterval","_option$legendPositio","legendPosition","_option$yAxisSplitLin","yAxisSplitLine","_option$titleCustom","titleCustom","_option$axisType","axisType","_option$grid","grid","_option$xAxisColor","xAxisColor","_option$yAxisColor","yAxisColor","_option$dataZoomShow","dataZoomShow","_option$dataZoomType","dataZoomType","_option$dataZoomBotto","dataZoomBottom","eOption","title","legend","tooltip","xAxis","yAxis","dataZoom","realtime","start","end","height","borderColor","filterMode","brushSelect","handleColor","handleSize","showDetail","params","labelFormatter","series","map","i","lastIndex","array","others","seriesItem","showBackground","backgroundStyle","itemStyle","Set","filter","index","symbol","itm","idx","barOption","_base","stackBarOption","_option$stackValues","stackValues","_option$stackStrategy","stackStrategy","baseOption","_excluded4","_base2","stack","heapStackBarOption","_chartData$data$","_excluded5","_base3","fd","commonData","_loop","eve","stackIdent","ind","ad","push","apply","_toConsumableArray","Array","fill","splice","stackData","barGap","stackTotalBarOption","_option$order","order","_option$stackStrategy3","_excluded6","_base4","initOpt","dataValue","lg","totalData","sum","parseFloat","arr","silent","emphasis","horizontalBarOption","_option$dataLabelPosi2","_option$yInverse","yInverse","_excluded7","_base5","_opt2","inverse","horizontalStackBarOption","_option$dataLabelPosi3","_option$stackStrategy4","_option$stackValues3","_option$yInverse2","_excluded8","_base6","_opt3","pictorialBarOption","_chartData$data2","_chartData$axisData2","_option$barWidth2","_option$hideDataLabel2","_option$dataLabelPosi4","_option$dataLabelShow2","_option$dataLabelOpt2","_option$color2","_option$labelColor2","_option$labelFontSize2","_option$tooltipTrigge","_option$barBackground2","_option$barBorderRadi2","_option$legendShow2","_option$legendType2","_option$rightDataLabe","rightDataLabel","_option$lineDataLabel","lineDataLabel","_excluded9","width","gridIndex","_extends","_objectDestructuringEmpty","xAxisIndex","yAxisIndex","doubleStackBar","_option$dataLabelShow3","_excluded10","z","_base7"],"mappings":"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"}